import { Select } from "antd";
import google_place_type from "./google_types";
const { Option } = Select;

let dict = {
  place_category: [
    "home",
    "work",
    "temporary",
    "owned",
    "rent",
    "house",
    "apartment",
    "condo",
    "landlord",
  ],
  set_config_view: ["list", "view", "crud", "document"],
  restrict_shelf: [
    // control
    "age_range",
    "date_range",
    "day_range",
    "discount",
    "pricing",
    "quantity",
    "rename",
    "time_range",
    "wholesale",
    // detail
    "description",
    "faq",
    "gallery",
    // option
    "option",
    "question",
    "size",
    "upload",
    // settings
    "max_order",
    "back_order",
    "tax",
    "remove_tax",
    "payments",
    "public",
    "published",
    "files",
    // association
    "featured_staff",
    "brand",
    "location",
    "fullfiller",
    "supplier",
  ],
  restrict_fields: [
    "brand",
    "categories",
    "fullfiller",
    "gallery",
    "info",
    "image",
    "influencer_setting",

    "liftings",
    "location",

    "on_hand",

    "payments",
    "price",
    "ready_in",
    "receivings",
    "reminder",
    "restriction",

    "shelf",
    "staff",
    "supplier",
    "tags",
    "targets",
    "templating",
  ],
  employee_status: [
    "hired",
    "probation",
    "suspended",
    "leave",
    "vacation",
    "awol",
  ],
  hr_status: [
    {
      value: "saved",
      label: "Save",
    },
    {
      value: "rejects",
      label: "Reject",
    },
    {
      value: "interviews",
      label: "Interview",
    },
    {
      value: "offers",
      label: "Offer",
    },
  ],
  category: [],
  target: ["B2B", "B2C", "P2P", "Template", "Package", "Event"],
  starting_location: ["base", "merchant", "customer"],
  coverage_location: ["base", "merchant", "customer"],
  product_service_type: ["B2B", "B2C", "C2B", "C2C"],
  order_type: ["verified", "custom"],
  receivings: [
    "In person",
    "store pickup",
    "delivery",
    "drive through",
    "shopper",
    "hold",
    "curbside",
    "dropoff",
    "booking",
  ],
  condition: [
    "Made on Order",
    "Prepared",
    "Customized",
    "New - Closed box",
    "New - Open Box",
    "Rebuilt",
    "Used - Like New",
    "Used",
    "Used - Acceptable",
    "Savage",
    "Vintage",
    "Others",
  ],
  credential_type: [
    "Academic",
    "Appreciations",
    "Attendance",
    "Contest",
    "Professional",
  ],
  days: [
    "Monday",
    "Tuesday",
    "Wednesday",
    "Thursday",
    "Friday",
    "Saturday",
    "Sunday",
  ],

  description_type: ["Description", "Privacy", "Terms"],
  computation_usage_value: ["Count", "Cost"],

  faq_type: [
    "Authentication",
    "Health",
    "Hours of Operation",
    "Location",
    "Products",
    "Staff",
  ],
  file_type: [
    "image/png",
    "image/gif",
    "image/jpeg",
    "image/jpg",
    "video/mp4",
    "audio/mp3",
  ],
  gallery_type: ["Slides", "Renders", "Lookbook"],
  lifespan: [
    "Break",
    "Clean",
    "Freeze",
    "Heat",
    "Room Temprature",
    "Serviced",
    "Maintenance",
  ],
  lifespan_computation: ["Days", "Hours", "Minutes", "Seconds"],
  liftings: [
    "scooter",
    "car",
    "mail_carrier",
    "bicycle",
    "small_truck",
    "recreational_vehicle",
    "van",
    "train",
    "boat",
    "plane",
    "tow",
    "big_truck",
  ],
  lifting: [
    "scooter",
    "car",
    "mail_carrier",
    "bicycle",
    "small_truck",
    "recreational_vehicle",
    "van",
    "train",
    "boat",
    "plane",
    "tow",
  ],
  transports: [
    "scooter",
    "car",
    "mail_carrier",
    "bicycle",
    "small_truck",
    "recreational_vehicle",
    "van",
    "train",
    "boat",
    "plane",
    "tow",
    "big_truck",
  ],
  payments: [
    "credit card",
    "debit",
    "on credit",
    "loan",
    "cash",
    "invoice",
    "donations",
    "escrow",
    "kickback",
  ],
  computation_pricing: ["set price", "offers", "subscription"],
  color: [
    "Red",
    "Orange",
    "Yellow",
    "Green",
    "Blue",
    "Purple",
    "Brown",
    "Magenta",
    "Tan",
    "Cyan",
    "Olive",
    "Maroon",
    "Navy",
    "Aquamarine",
    "Turquoise",
    "Silver",
    "Lime",
    "Teal",
    "Indigo",
    "Violet",
    "Pink",
    "Black",
    "White",
    "Gray",
  ],
  prep_speed: [
    "5 minutes",
    "10 minutes",
    "20 minutes",
    "30 minutes",
    "1 Hour",
    "2 Hour",
    "4 Hour",
    "8 Hour",
    "12 Hour",
    "24 Hour",
    "48 Hour",
  ],
  computation_readiness: ["independent", "linear"],
  special_consideration: ["Fish", "Beef", "Eggs", "High Sugar"],
  computation_age: ["year", "month"],
  computation_show_hide: ["show", "hide"],
  computation_on_hand: ["total", "daily", "constant"],
  computation_overide: [
    "Denied Automaticly",
    "Accept with Warning",
    "Request Overide",
  ],
  computation_amount_included: ["total", "per", "pricing"],
  computation_price_adjuster: ["percent", "whole"],
  computation_expiration: [
    "days",
    "hours",
    "minutes",
    "seconds",
    "millisecond",
  ],
  file_availability: ["during purchase", "after purchase"],

  computation_timing: ["days", "hours", "minutes", "seconds", "millisecond"],
  computation_uom: [
    "Acre",
    "Acre-Foot	",
    "Ampere",
    "Angular Frequency",
    "Are",
    "Astronomical Unit",
    "Bar",
    "Becquerel",
    "Calorie",
    "Candela",
    "Candela per square metre",
    "Centigrade",
    "Centiliter",
    "Centimeter",
    "Coulomb",
    "Cubic Foot",
    "Cubic Inch",
    "Cubic meter",
    "Cubic Yard",
    "Cup",
    "Decibel",
    "Deciliter",
    "Decimeter",
    "Decitex",
    "Degree",
    "Denier",
    "Density",
    "Diopter",
    "Dozen",
    "Dram",
    "Fahrenheit",
    "Farad",
    "Feet per second	",
    "Fluid Ounce	",
    "Foot",
    "Gallon",
    "Gill",
    "Grain",
    "Grams",
    "Gravity Imperial",
    "Gravity Metric",
    "Hectare",
    "Hectoliter",
    "Henry",
    "Hertz",
    "Horsepower",
    "Hour",
    "Hundredweight",
    "Inch",
    "Joule",
    "Kelvin",
    "Kilogram",
    "Kilogram meters per second	",
    "Kilometer",
    "Kilopond",
    "Kilowatt",
    "Light Year",
    "Liter",
    "Lumen",
    "Lumen Seconds	",
    "Lux",
    "Meter/Metre	",
    "Meters per second	",
    "Mile",
    "Miles per hour	",
    "Milliliter",
    "Millimeter",
    "Minute",
    "Mole",
    "Mommes",
    "Nautical Mile	",
    "Newton",
    "Newton meter	",
    "Ohm",
    "Ounce",
    "Paper Bale	",
    "Parsec",
    "Pascal",
    "Pascal",
    "Pint",
    "Pond",
    "Pound",
    "Pounds per square inch	",
    "Quart",
    "Radian",
    "Second",
    "Siemens",
    "Slug",
    "Square feet	",
    "Square inch	",
    "Square meter	",
    "Square mile	",
    "Square yard	",
    "Steradian",
    "Tablespoon",
    "Teaspoon",
    "Tesla",
    "Tex",
    "Ton",
    "Tonne",
    "Volt",
    "Watt",
    "Weber",
    "Yard",
    "Year",
  ],
  associate_relationship: [
    "members",
    "supplier",
    "customer",
    "competitor",
    "parent company",
    "child company",
    "sister company",
    "service provider",
    "marketing",
    "finance and accounting",
    "legal",
    "next door",
  ],
  contact_type: [
    "owner",
    "manager",
    "supervisor",
    "staff",
    "student",
    "director",
    "landlord",
    "friend",
    "visitor",
  ],
  employee_access: ["driver", "dispatch", "merchant_app", "web_app"],

  google_place_type,

  face_relationship: ["self", "wife", "husband", "daughter", "son", "pet"],
  active_tab: ["self", "wife", "husband", "daughter", "son", "pet"],
  active_panel: ["B2C", "B2B", "P2P"],
  compensation_type: ["year", "hour", "assignment", "commission"],
  employment_type: [
    "full time",
    "part time",
    "contract",
    "internship",
    "employee's choice",
  ],
  education_type: [
    "any",
    "high school",
    "trade",
    "associate",
    "bachelor",
    "master",
    "doctorate",
    "other",
  ],

  benefit_categories: ["medical", "life", "disability", "retirement"],
  upload_timing: ["before", "during", "after"],
  document_categories: ["identification", "resume", "educational", "sensetive"],
  legal_categories: [
    "Discrimination",
    "Equal Employment Opportunities",
    "Classifications of employees",
    "Compensation",
    "Raises and deductions",
    "Overtime policies",
    "Meal and break periods",
    "Employee benefits",
    "Vacation and holiday",
  ],
  equipment_category: ["To keep", "must be returned", "lease"],
  service_type: ["delivery", "shopping", "drop off", "transport"],
  file_request_type: ["download", "upload"],
  relationship: ["self", "daughter", "son", "pet", "wife", "husband", "friend"],
  user_access: ["order", "customer", "job"],
  package_type: ["discounted", "general", "trustee", "leadership"],
};

export default function GetOption(props) {
  let { dict_key } = props;
  const options = dict[dict_key] || [];

  var output = [];

  options.forEach((config, index) => {
    let option = {};
    if (typeof config === "string") {
      option = {
        value: config,
        label: config.replaceAll("_", " "),
      };
    }

    output.push(
      <Option
        key={index}
        name={dict_key}
        value={option.value}
        label={option.label}
      >
        <div className="demo-option-label-item">
          {option.prefix && (
            <span role="img" aria-label="China">
              {option.prefix}
            </span>
          )}
          {option.label}
        </div>
      </Option>
    );
  });

  return output;
}

export const OptionsOnly = ({ dict_key }) => {
  return dict[dict_key] || [];
};
